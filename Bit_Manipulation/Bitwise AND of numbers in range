Given two integers left and right that represent the range [left, right], return the bitwise AND of all numbers in this range, inclusive.

 

Example 1:

Input: left = 5, right = 7
Output: 4
Example 2:

Input: left = 0, right = 0
Output: 0
Example 3:

Input: left = 1, right = 2147483647
Output: 0
 

Constraints:

0 <= left <= right <= 231 - 1

intution : Problem is to find common prefix(in binary representation) of all numbers in the given range.
Continue doing one right shift both the numbers untill both are equal. Then the required common prefix will be obtained and return that prefix 
after shifting prefix to original position.

class Solution {
    public int rangeBitwiseAnd(int left, int right) {
        int shift = 0;
        while(left!=right)
        {
            left >>=1;
            right >>=1;
            shift++;
        }
        return left << shift;
    }
}
