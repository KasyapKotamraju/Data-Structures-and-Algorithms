https://leetcode.com/problems/reverse-words-in-a-string-iii/description/

Given a string s, reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.

 

Example 1:

Input: s = "Let's take LeetCode contest"
Output: "s'teL ekat edoCteeL tsetnoc"
Example 2:

Input: s = "God Ding"
Output: "doG gniD"
 

Constraints:

1 <= s.length <= 5 * 104
s contains printable ASCII characters.
s does not contain any leading or trailing spaces.
There is at least one word in s.
All the words in s are separated by a single space.

Solution :

class Solution {
    public void reverse(char[] arr, int start, int end)
    {
        while(start < end)
        {
            char temp = arr[start];
            arr[start] = arr[end];
            arr[end] = temp;
            start++;
            end--;
        }
    }
    public String reverseWords(String s) {
        char[] arr = s.toCharArray();
        int i = 0;
        while(i<arr.length)
        {
            if(arr[i]!=' ')
            {
                int j = i;
                while(i<arr.length && arr[i]!=' ')i++;
                reverse(arr, j, i-1);
            }
            i++;
        }
        return new String(arr);
    }
}
