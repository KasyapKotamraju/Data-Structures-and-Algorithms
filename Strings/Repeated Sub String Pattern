Given a string s, check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.

 

Example 1:

Input: s = "abab"
Output: true
Explanation: It is the substring "ab" twice.
Example 2:

Input: s = "aba"
Output: false
Example 3:

Input: s = "abcabcabcabc"
Output: true
Explanation: It is the substring "abc" four times or the substring "abcabc" twice.
 

Constraints:

1 <= s.length <= 104
s consists of lowercase English letters.

Solution  :

class Solution {
    public boolean repeatedSubstringPattern(String s) {
        StringBuilder sb = new StringBuilder();
        for(int i=s.length()/2; i>0; i--)
        {
            if(s.length()%i==0)
            {
                int m = s.length()/i;
                String temp = s.substring(0, i);
                while(m-->0)
                {
                    sb.append(temp);
                }
                if(sb.toString().equals(s))return true;
                sb = new StringBuilder();
            }
        }
        return false;
    }
}
